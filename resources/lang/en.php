<?php
	$dictionary = array(
		'Menu' => 'Menu',
		'World' => 'World',
		'Elements' => 'Elements',
		'Restrictions' => 'Restrictions',
		'Periods' => 'Period',
		'Actions' => 'Actions',
		'Ranges' => 'Ranges',
		'Behaviour' => 'Behaviour',
		'Run' => 'Run',
		'Control panel' => 'Control panel',
		'Execution period' => 'Execution period',
		'Total period' => 'Total period',
		'Daylight period' => 'Daylight period',
		'Night period' => 'Night period',
		'Size' => 'Size',
		'Height' => 'Height',
		'Width' => 'Width',
		'Weather' => 'Weather',
		'Begining weather' => 'Begining weather',
		'sunny' => 'sunny',
		'rainy' => 'rainy',
		'windy' => 'windy',
		'foggy' => 'foggy',
		'Change weather each (cycles)' => 'Change weather each (cycles)',
		'0 for constant weather' => '0 for constant weather',
		'Begining amount of elements' => 'Begining amount of elements',
		'Carrots' => 'Carrots',
		'Trees' => 'Trees',
		'Lairs' => 'Lairs',
		'Rabbits' => 'Rabbits',
		'Wolves' => 'Wolves',
		'Regeneration of carrots' => 'Regeneration of carrots',
		'Each (cycles)' => 'Each (cycles)',
		'Amount' => 'Amount',
		'Eat' => 'Eat',
		'Rabbits - Cycles without eat' => 'Rabbits - Cycles without eat',
		'Wolves - Cycles without eat' => 'Wolves - Cycles without eat',
		'Sleep' => 'Sleep',
		'Rabbits - Cycles without sleep' => 'Rabbits - Cycles without sleep',
		'Wolves - Cycles without sleep' => 'Wolves - Cycles without sleep',
		'Rabbits - Obligatory place to sleep' => 'Rabbits - Obligatory place to sleep',
		'Breed' => 'Breed',
		'Rabbits - Can breed each (cycles)' => 'Rabbits - Can breed each (cycles)',
		'Rabbits - Maximum amount' => 'Rabbits - Maximum amount',
		'Wolves - Can breed each (cycles)' => 'Wolves - Can breed each (cycles)',
		'Wolves - Maximum amount' => 'Wolves - Maximum amount',
		'0 to avoid the breed of rabbits and wolves' => '0 to avoid the breed of rabbits and wolves',
		'They aren\'t going to breed with this parameters. Two rabbits or two wolves need to meet, need to be sated and need to sleep enough. The maximum amount indicates the number of children they can have, which is between 1 and already said amount. This feature concerns an individual. It exists the posibility that their children don\'t live at birth' => 'They aren\'t going to breed with this parameters. Two rabbits or two wolves need to meet, need to be sated and need to sleep enough. The maximum amount indicates the number of children they can have, which is between 1 and already said amount. This feature concerns an individual. It exists the posibility that their children don\'t live at birth',
		'Rabbits - Need (cycles)' => 'Rabbits - Need (cycles)',
		'Wolves - Need (cycles)' => 'Wolves - Need (cycles)',
		'Rabbits - Are sated for (cycles)' => 'Rabbits - Are sated for (cycles)',
		'Wolves - Are sated for (cycles)' => 'Wolves - Are sated for (cycles)',
		'0 to eat in the same cycle' => '0 to eat in the same cycle',
		'0 to sleep in the same cycle' => '0 to sleep in the same cycle',
		'Points per cycle to make actions' => 'Points per cycle to make actions',
		'Use per action' => 'Use per action',
		'Smell - Rabbits' => 'Smell - Rabbits',
		'Smell - Wolves' => 'Smell - Wolves',
		'Hear - Rabbits' => 'Hear - Rabbits',
		'Hear - Wolves' => 'Hear - Wolves',
		'See - Rabbits' => 'See - Rabbits',
		'See - Wolves' => 'See - Wolves',
		'Move - Rabbits' => 'Move - Rabbits',
		'Move - Wolves' => 'Move - Wolves',
		'Sleep - Rabbits' => 'Sleep - Rabbits',
		'Sleep - Wolves' => 'Sleep - Wolves',
		'Breed - Rabbits' => 'Breed - Rabbits',
		'Breed - Wolves' => 'Breed - Wolves',
		'Ranges' => 'Ranges',
		'Sight - Rabbits' => 'Sight - Rabbits',
		'Sight - Wolves' => 'Sight - Wolves',
		'Smell - Rabbits' => 'Smell - Rabbits',
		'Smell - Wolves' => 'Smell - Wolves',
		'Hear - Rabbits' => 'Hear - Rabbits',
		'Hear - Wolves' => 'Hear - Wolves',
		'Comfort zone' => 'Comfort zone',
		'Rabbits - Until (cycles) after eat' => 'Rabbits - Until (cycles) after eat',
		'Wolves - Until (cycles) after eat' => 'Wolves - Until (cycles) after eat',
		'Rabbits - Until (cycles) after sleep' => 'Rabbits - Until (cycles) after sleep',
		'Wolves - Until (cycles) after sleep' => 'Wolves - Until (cycles) after sleep'
	);
?>